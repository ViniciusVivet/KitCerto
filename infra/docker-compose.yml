services:
  mongo:
    image: mongo:6
    container_name: kitcerto-mongo
    restart: unless-stopped
    ports:
      - "${MONGO_PORT:-27017}:27017"
    volumes:
      - mongo_data:/data/db
    networks: [kitnet]

  mongo-express:
    image: mongo-express:1.0.2
    container_name: kitcerto-mongo-express
    restart: unless-stopped
    depends_on: [mongo]
    environment:
      ME_CONFIG_MONGODB_URL: ${MONGO_URI:-mongodb://mongo:27017/kitcerto}
    ports:
      - "${MONGO_EXPRESS_HTTP_PORT:-8081}:8081"
    networks: [kitnet]

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.5
    container_name: kitcerto-keycloak
    command:
      - start-dev
      - --import-realm
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
      KC_HTTP_PORT: 8080
    volumes:
      - ./keycloak/realm-kitcerto.json:/opt/keycloak/data/import/realm-kitcerto.json:ro
    ports:
      - "${KEYCLOAK_HTTP_PORT:-8080}:8080"
    networks: [kitnet]

  api:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: kitcerto-api
    depends_on: [mongo, keycloak]
    environment:
      ASPNETCORE_URLS: http://+:5000
      ConnectionStrings__Mongo: ${MONGO_URI:-mongodb://mongo:27017/kitcerto}
      Auth__Authority: ${KEYCLOAK_BASE_URL:-http://keycloak:8080}/realms/kitcerto
      Auth__Audience: kitcerto-api
      Cache__Redis__Enabled: "false"
    expose:
      - "5000"
    networks: [kitnet]

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: kitcerto-frontend
    depends_on: [api]
    environment:
      NEXT_PUBLIC_API_BASE: /api
      NEXT_PUBLIC_AUTH_URL: ${KEYCLOAK_BASE_URL:-http://localhost:8080}/realms/kitcerto
      NEXT_PUBLIC_KC_CLIENT: kitcerto-frontend
    expose:
      - "3000"
    networks: [kitnet]

  nginx:
    image: nginx:stable
    container_name: kitcerto-nginx
    depends_on: [frontend, api]
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    networks: [kitnet]

networks:
  kitnet:

volumes:
  mongo_data:
