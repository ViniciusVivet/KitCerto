# infra/docker-compose.yml
# dica: essa diretiva "version" é opcional/obsoleta nas engines novas
# version: "3.9"

services:
  # ---------- Mongo ----------
  mongo:
    image: mongo:6.0        # (use 6.0 como você já vinha usando)
    container_name: kitcerto-mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    # healthcheck:
    #   test: ["CMD", "mongosh", "--quiet", "--eval", "db.runCommand({ ping: 1 }).ok"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5

  # ---------- Keycloak ----------

  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    command: ["start-dev"]
    ports: ["8080:8080"]
    # healthcheck:
    #   test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/health/ready || exit 1"]
    #   interval: 15s
    #   timeout: 3s
    #   retries: 30
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
    volumes:
      - ./keycloak/realm-kitcerto.json:/opt/keycloak/data/import/realm-kitcerto.json:ro



  # ---------- API ----------
  api:
    container_name: kitcerto-api
    build:
      context: .
      dockerfile: backend/KitCerto.API/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Docker
      ASPNETCORE_URLS: http://0.0.0.0:5000
      # Appsettings.Docker.json espera "ConnectionStrings:Mongo" e Auth
      ConnectionStrings__Mongo: mongodb://mongo:27017/kitcerto
      Auth__Authority: http://keycloak:8080/realms/kitcerto
      Auth__Audience: kitcerto-api
      Cors__Origins: http://localhost:3000;http://localhost;http://frontend:3000
    depends_on:
      - mongo
      - keycloak
    ports:
      - "5000:5000"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10

  # ---------- Frontend ----------
  frontend:
    container_name: kitcerto-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_BASE_URL=http://api:5000
      - NEXT_PUBLIC_USE_MOCKS=false
    depends_on:
      - api
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ---------- Nginx (comentado por enquanto) ----------
  # nginx:
  #   image: nginx:alpine
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
  #   depends_on:
  #     - api
  #     - frontend

volumes:
  mongo_data:
